<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Crear cuenta – Mini Mercado “Súper Único”</title>

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap" rel="stylesheet">

  <style>
    :root{
      --bg:#f6f7f2; --card:#ffffff; --ink:#17261a; --muted:#5f6f65;
      --primary:#2e7d32; --primary-600:#256a29; --accent:#ffb300; --lime:#8bc34a;
      --danger:#d32f2f; --ring:#9ad17f; --radius:18px; --shadow:0 10px 30px rgba(20,48,28,.12);
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0; font-family:"Inter",system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;
      color:var(--ink);
      background:radial-gradient(1200px 600px at 15% -10%, #e9f4e5 0%, transparent 60%),
                 radial-gradient(1000px 500px at 95% 10%, #fff4d8 0%, transparent 55%),
                 var(--bg);
      display:grid; place-items:center; padding:18px;
    }
    .wrap{width:min(96vw, 720px); display:grid; gap:22px}
    .logo{display:inline-flex; align-items:center; gap:12px; font-weight:800; letter-spacing:.4px}
    .logo-badge{width:42px;height:42px;border-radius:12px;background:
      conic-gradient(from 160deg at 70% 30%, var(--accent), #ffd76a 35%, #fff6cf 35%, #fff6cf 65%, var(--lime) 65%, #4caf50);
      display:grid; place-items:center; box-shadow:0 6px 14px rgba(255,179,0,.25)}
    .logo svg{width:24px;height:24px}
    h1{margin:0; font-size:clamp(22px,1.4vw + 16px,28px)}
    .subtitle{color:var(--muted); margin:0}

    .card{background:var(--card); border-radius:var(--radius); box-shadow:var(--shadow); padding:22px}
    .form{display:grid; gap:14px}
    .group{display:grid; gap:8px}
    label{font-size:12px; color:var(--muted)}
    input, select{
      width:100%; border:1.5px solid #dfe5df; background:#f9fbf7; padding:12px 12px;
      font-size:16px; border-radius:12px; outline:none; transition:border .2s, box-shadow .2s, background .2s;
    }
    input:focus, select:focus{border-color:var(--primary); box-shadow:0 0 0 4px var(--ring); background:#fff}
    .row{display:grid; gap:12px}
    @media (min-width:720px){ .row{ grid-template-columns: 1fr 1fr } }

    .switch{
      display:flex; align-items:center; gap:10px; user-select:none;
      background:#f9fbf7; border:1.5px solid #dfe5df; padding:10px 12px; border-radius:12px;
    }
    .switch input{ width:auto; accent-color:var(--primary) }

    .pw-toggle{
      position:relative;
    }
    .pw-toggle button{
      position:absolute; right:10px; top:50%; transform:translateY(-50%);
      background:transparent; border:0; font-size:12px; color:var(--primary-600); cursor:pointer; font-weight:700;
    }

    .meter{
      height:8px; border-radius:6px; background:#e9efe9; overflow:hidden;
    }
    .meter > span{
      display:block; height:100%; width:0%;
      background: linear-gradient(90deg, #d32f2f, #ffb300, #8bc34a);
      transition: width .25s ease;
    }

    .actions{display:grid; gap:12px; margin-top:8px}
    .btn{
      appearance:none; border:0; cursor:pointer; display:inline-flex; align-items:center; justify-content:center;
      gap:10px; font-weight:700; padding:14px 18px; border-radius:14px; text-decoration:none;
      transition:transform .04s ease, filter .15s ease, background .2s ease;
    }
    .btn:active{ transform: translateY(1px) }
    .btn-primary{ background:linear-gradient(180deg, var(--primary) 0%, var(--primary-600) 100%); color:#fff }
    .btn-secondary{ background:#eef7e9; color:var(--primary); border:1.5px solid #d7ecd2; text-align:center }

    .error, .success{
      display:none; padding:10px 12px; border-radius:12px; font-size:14px;
    }
    .error{ background:#fdecec; border:1px solid #f8b4b4; color:var(--danger) }
    .success{ background:#e9f7ea; border:1px solid #b9e0bf; color:#1b5e20 }
  </style>
</head>
<body>
  <main class="wrap">
    <header>
      <div class="logo" aria-label="Mini Mercado Súper Único">
        <span class="logo-badge" aria-hidden="true">
          <svg viewBox="0 0 24 24" fill="none" aria-hidden="true">
            <path d="M6 6h14l-2 8H8L6 4H3" stroke="#1b5e20" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <circle cx="9" cy="20" r="1.6" fill="#1b5e20"/>
            <circle cx="17" cy="20" r="1.6" fill="#1b5e20"/>
          </svg>
        </span>
        <h1>Crear cuenta</h1>
      </div>
      <p class="subtitle">Completa los datos para registrar un nuevo usuario.</p>
    </header>

    <section class="card">
      <form id="registerForm" class="form" novalidate>
        <div class="error" id="errorBox"></div>
        <div class="success" id="okBox"></div>

        <div class="group">
          <label for="Nombre">Nombre completo (máx. 50)</label>
          <input id="Nombre" name="Nombre" type="text" maxlength="50" placeholder="Ej. Ana Pérez" required />
        </div>

        <div class="row">
          <div class="group">
            <label for="Rol">Rol (máx. 10)</label>
            <select id="Rol" name="Rol" required>
              <option value="">Seleccione un rol…</option>
              <option>Admin</option>
              <option>Cajero</option>
              <option>Bodeguero</option>
              <option>Supervisor</option>
              <option>Invitado</option>
            </select>
          </div>

          <div class="group">
            <label for="Email">Email (máx. 100)</label>
            <input id="Email" name="Email" type="email" maxlength="100" placeholder="correo@ejemplo.com" required />
          </div>
        </div>

        <div class="row">
          <div class="group pw-toggle">
            <label for="Password">Contraseña</label>
            <input id="Password" name="Password" type="password" minlength="8" maxlength="255" placeholder="Mínimo 8 caracteres" required />
            <button type="button" data-target="Password">ver</button>
          </div>

          <div class="group pw-toggle">
            <label for="Password2">Confirmar contraseña</label>
            <input id="Password2" name="Password2" type="password" minlength="8" maxlength="255" placeholder="Repite la contraseña" required />
            <button type="button" data-target="Password2">ver</button>
          </div>
        </div>

        <div class="group">
          <label>Fortaleza de contraseña</label>
          <div class="meter" aria-hidden="true"><span id="meterBar"></span></div>
        </div>

        <div class="switch">
          <input id="Estado" name="Estado" type="checkbox" checked />
          <label for="Estado">Usuario activo</label>
        </div>

        <div class="actions">
          <button class="btn btn-primary" type="submit">Crear cuenta</button>
          <a class="btn btn-secondary" href="/">Volver a iniciar sesión</a>
        </div>
      </form>
    </section>
  </main>

  <script>
    // Mostrar / ocultar contraseña
    document.querySelectorAll('.pw-toggle button').forEach(btn=>{
      btn.addEventListener('click', ()=>{
        const id = btn.getAttribute('data-target');
        const input = document.getElementById(id);
        input.type = input.type === 'password' ? 'text' : 'password';
        btn.textContent = input.type === 'password' ? 'ver' : 'ocultar';
      });
    });

    // Medidor simple de fortaleza
    const pass = document.getElementById('Password');
    const bar = document.getElementById('meterBar');
    pass.addEventListener('input', ()=>{
      const v = pass.value;
      let score = 0;
      if (v.length >= 8) score++;
      if (/[A-Z]/.test(v)) score++;
      if (/[a-z]/.test(v)) score++;
      if (/\d/.test(v))   score++;
      if (/[^A-Za-z0-9]/.test(v)) score++;
      bar.style.width = (score*20) + '%';
    });

    // Envío a la API
    const form = document.getElementById('registerForm');
    const errorBox = document.getElementById('errorBox');
    const okBox = document.getElementById('okBox');

    form.addEventListener('submit', async (e)=>{
      e.preventDefault();
      errorBox.style.display = "none";
      okBox.style.display = "none";

      const Nombre = document.getElementById('Nombre').value.trim();
      const Rol = document.getElementById('Rol').value.trim();
      const Email = document.getElementById('Email').value.trim().toLowerCase();
      const Password = document.getElementById('Password').value;
      const Password2 = document.getElementById('Password2').value;
      const Estado = document.getElementById('Estado').checked ? 1 : 0;

      if (Password !== Password2){
        errorBox.textContent = "Las contraseñas no coinciden.";
        errorBox.style.display = "block";
        return;
      }

      try{
        const resp = await fetch("/api/register", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ Nombre, Rol, Email, Contrasena: Password, Estado })
        });

        const data = await resp.json();
        if (resp.ok && data.ok){
          okBox.textContent = "Usuario creado correctamente.";
          okBox.style.display = "block";
          form.reset();
          bar.style.width = '0%';
        }else{
          errorBox.textContent = data.error || "No se pudo crear el usuario.";
          errorBox.style.display = "block";
        }
      }catch(err){
        errorBox.textContent = "Error de conexión con el servidor.";
        errorBox.style.display = "block";
      }
    });
  </script>
</body>
</html>
